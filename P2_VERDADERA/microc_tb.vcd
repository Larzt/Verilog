$date
	Wed Nov 20 18:38:39 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module microc_tb $end
$var wire 1 ! z $end
$var wire 6 " Opcode [5:0] $end
$var reg 3 # t_ALUOp [2:0] $end
$var reg 1 $ t_clk $end
$var reg 1 % t_reset $end
$var reg 1 & t_s_inc $end
$var reg 1 ' t_s_inm $end
$var reg 1 ( t_we $end
$var reg 1 ) t_wez $end
$scope module uut $end
$var wire 3 * Op [2:0] $end
$var wire 1 $ clk $end
$var wire 16 + instr [15:0] $end
$var wire 10 , pc_out [9:0] $end
$var wire 1 - reset $end
$var wire 1 & s_inc $end
$var wire 1 ' s_inm $end
$var wire 1 ( we3 $end
$var wire 1 ) wez $end
$var wire 1 ! z $end
$var wire 1 . z_next $end
$var wire 8 / wd3 [7:0] $end
$var wire 10 0 sum_out [9:0] $end
$var wire 8 1 rd2 [7:0] $end
$var wire 8 2 rd1 [7:0] $end
$var wire 10 3 pc_in [9:0] $end
$var wire 8 4 mux2_out [7:0] $end
$var wire 4 5 mux1_out [3:0] $end
$var wire 6 6 Opcode [5:0] $end
$scope module alu_inst $end
$var wire 8 7 A [7:0] $end
$var wire 3 8 Op [2:0] $end
$var wire 8 9 B [7:0] $end
$var reg 8 : S [7:0] $end
$var reg 1 . zero $end
$upscope $end
$scope module banco_registros $end
$var wire 4 ; RA1 [3:0] $end
$var wire 4 < WA3 [3:0] $end
$var wire 8 = WD3 [7:0] $end
$var wire 1 $ clk $end
$var wire 1 ( we3 $end
$var wire 8 > RD2 [7:0] $end
$var wire 8 ? RD1 [7:0] $end
$var wire 4 @ RA2 [3:0] $end
$upscope $end
$scope module mem $end
$var wire 10 A Address [9:0] $end
$var wire 16 B Data [15:0] $end
$var wire 1 $ clk $end
$upscope $end
$scope module mux_alu $end
$var wire 8 C D0 [7:0] $end
$var wire 8 D D1 [7:0] $end
$var wire 1 ' s $end
$var wire 8 E Y [7:0] $end
$upscope $end
$scope module mux_bc $end
$var wire 4 F D0 [3:0] $end
$var wire 4 G D1 [3:0] $end
$var wire 1 ' s $end
$var wire 4 H Y [3:0] $end
$upscope $end
$scope module mux_pc $end
$var wire 10 I D1 [9:0] $end
$var wire 1 J s $end
$var wire 10 K Y [9:0] $end
$var wire 10 L D0 [9:0] $end
$upscope $end
$scope module pc $end
$var wire 8 M D [7:0] $end
$var wire 1 N clk $end
$var wire 1 $ reset $end
$var reg 8 O Q [7:0] $end
$upscope $end
$scope module sumador $end
$var wire 10 P A [9:0] $end
$var wire 10 Q B [9:0] $end
$var wire 10 R Y [9:0] $end
$upscope $end
$scope module zero_flag $end
$var wire 1 ) carga $end
$var wire 1 ! clk $end
$var wire 1 $ d $end
$var wire 1 . reset $end
$var reg 1 S q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xS
bx R
b1 Q
bx P
b0x O
xN
b0x M
bx L
bx K
zJ
b0 I
bz H
bz G
bz F
b0zzzz E
bz D
b0zzzz C
bx B
bz A
bz @
bx ?
bx >
bx =
bz <
bz ;
bx :
bx 9
b0z 8
b0z 7
bz 6
bz 5
b0zzzz 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
x-
bx ,
bz +
b0z *
0)
0(
0'
0&
1%
0$
b0 #
bz "
z!
$end
#1000
0%
#3000
b0 O
1$
#4500
bz 4
bz E
0$
b1 I
1&
1'
1(
#6000
1$
#7500
0$
#9000
1$
#10500
0$
#12000
1$
#13500
b0zzzz 4
b0zzzz E
0$
b11 #
0'
1)
#15000
1$
#16500
0$
b0 #
0(
#18000
1$
#19500
0$
b10 #
1(
#21000
1$
#22500
bz 4
bz E
0$
1'
#24000
1$
#25500
b0zzzz 4
b0zzzz E
0$
b0 #
b0 I
0&
0'
0(
0)
#27000
1$
#28500
0$
b11 #
b1 I
1&
1(
1)
#30000
1$
#31500
0$
b0 #
0(
#33000
1$
#34500
0$
b10 #
1(
#36000
1$
#37500
bz 4
bz E
0$
1'
#39000
1$
#40500
b0zzzz 4
b0zzzz E
0$
0'
#42000
1$
#43500
0$
b100 #
#45000
1$
#46500
0$
b11 #
#48000
1$
#49500
0$
b0 #
b0 I
0&
0(
#51000
1$
#52500
0$
0)
#54000
1$
#55500
0$
#57000
1$
#58500
0$
